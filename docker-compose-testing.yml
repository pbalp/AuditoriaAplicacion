#docker-compose.yml (Base)
version: '3.4'


services:
  nginx:
    image: nginx:1.21
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - autenticacion
      - clientes
      - personal
      - billetes
      - autobuses

  dbAutenticacion:
    image: mariadb:10.6
    container_name: dbAutenticacion
    #volumes:
    #  - ./dbAutenticacion:/var/lib/mysql
    environment: 
      - MARIADB_USER=${user}
      - MARIADB_PASSWORD=${password}
      - MARIADB_ROOT_PASSWORD=${password}
      - MARIADB_DATABASE=${dbAutenticacion}
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "--silent"]
        interval: 60s
        timeout: 10s
        retries: 5

  dbClientes:
    image: mariadb:10.6
    container_name: dbClientes
    #volumes:
    #  - ./dbClientes:/var/lib/mysql
    environment: 
      - MARIADB_USER=${user}
      - MARIADB_PASSWORD=${password}
      - MARIADB_ROOT_PASSWORD=${password}
      - MARIADB_DATABASE=${dbClientes}
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "--silent"]
        interval: 60s
        timeout: 10s
        retries: 5

  dbPersonal:
    image: mariadb:10.6
    container_name: dbPersonal
    #volumes:
    #  - ./dbPersonal:/var/lib/mysql
    environment: 
      - MARIADB_USER=${user}
      - MARIADB_PASSWORD=${password}
      - MARIADB_ROOT_PASSWORD=${password}
      - MARIADB_DATABASE=${dbPersonal}
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] #["CMD", "mariadb", "--user=", $user, "--password=", $password]
        interval: 60s
        timeout: 10s
        retries: 5

  dbBilletes:
    image: mariadb:10.6
    container_name: dbBilletes
    #volumes:
    #  - ./dbBilletes:/var/lib/mysql
    environment: 
      - MARIADB_USER=${user}
      - MARIADB_PASSWORD=${password}
      - MARIADB_ROOT_PASSWORD=${password}
      - MARIADB_DATABASE=${dbBilletes}
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] #["CMD", "mariadb", "--user=", $user, "--password=", $password]
        interval: 60s
        timeout: 10s
        retries: 5

  dbAutobuses:
    image: mariadb:10.6
    container_name: dbAutobuses
    #volumes:
    #  - ./dbAutobuses:/var/lib/mysql
    environment: 
      - MARIADB_USER=${user}
      - MARIADB_PASSWORD=${password}
      - MARIADB_ROOT_PASSWORD=${password}
      - MARIADB_DATABASE=${dbAutobuses}
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] #["CMD", "mariadb", "--user=", $user, "--password=", $password]
        interval: 60s
        timeout: 10s
        retries: 5

  autenticacion:
    image: autenticacion:${TAG:-latest}
    container_name: autenticacion
    build:
      context: ./GestionAutenticacion
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment: 
      - dbAutenticacionURL=${dbAutenticacion_URL}
    depends_on:
      dbAutenticacion:
        condition: service_healthy

  clientes:
    image: clientes:${TAG:-latest}
    container_name: clientes
    build:
      context: ./GestionClientes
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment: 
      - dbClientesURL=${dbClientes_URL}
    depends_on:
      dbClientes:
        condition: service_healthy

  personal:
    image: personal:${TAG:-latest}
    container_name: personal
    build:
      context: ./GestionPersonal
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment: 
      - dbPersonalURL=${dbPersonal_URL}
    depends_on:
      dbPersonal:
        condition: service_healthy

  billetes:
    image: billetes:${TAG:-latest}
    container_name: billetes
    build:
      context: ./GestionBilletes
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment: 
      - dbBilletesURL=${dbBilletes_URL}
    depends_on:
      dbBilletes:
        condition: service_healthy

  autobuses:
    image: autobuses:${TAG:-latest}
    container_name: autobuses
    build:
      context: ./GestionAutobuses
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment: 
      - dbAutobusesURL=${dbAutobuses_URL}
    depends_on:
      dbAutobuses:
        condition: service_healthy

